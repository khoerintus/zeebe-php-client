<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: zeebe.proto

namespace ZeebeClient;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>gateway_protocol.CreateWorkflowInstanceWithResultResponse</code>
 */
class CreateWorkflowInstanceWithResultResponse extends \Google\Protobuf\Internal\Message
{
    /**
     * the key of the workflow definition which was used to create the workflow instance
     *
     * Generated from protobuf field <code>int64 workflowKey = 1;</code>
     */
    protected $workflowKey = 0;
    /**
     * the BPMN process ID of the workflow definition which was used to create the workflow
     * instance
     *
     * Generated from protobuf field <code>string bpmnProcessId = 2;</code>
     */
    protected $bpmnProcessId = '';
    /**
     * the version of the workflow definition which was used to create the workflow instance
     *
     * Generated from protobuf field <code>int32 version = 3;</code>
     */
    protected $version = 0;
    /**
     * the unique identifier of the created workflow instance; to be used wherever a request
     * needs a workflow instance key (e.g. CancelWorkflowInstanceRequest)
     *
     * Generated from protobuf field <code>int64 workflowInstanceKey = 4;</code>
     */
    protected $workflowInstanceKey = 0;
    /**
     * JSON document
     * consists of visible variables in the root scope
     *
     * Generated from protobuf field <code>string variables = 5;</code>
     */
    protected $variables = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $workflowKey
     *           the key of the workflow definition which was used to create the workflow instance
     *     @type string $bpmnProcessId
     *           the BPMN process ID of the workflow definition which was used to create the workflow
     *           instance
     *     @type int $version
     *           the version of the workflow definition which was used to create the workflow instance
     *     @type int|string $workflowInstanceKey
     *           the unique identifier of the created workflow instance; to be used wherever a request
     *           needs a workflow instance key (e.g. CancelWorkflowInstanceRequest)
     *     @type string $variables
     *           JSON document
     *           consists of visible variables in the root scope
     * }
     */
    public function __construct($data = NULL) {
        \ZeebeClient\Zeebe::initOnce();
        parent::__construct($data);
    }

    /**
     * the key of the workflow definition which was used to create the workflow instance
     *
     * Generated from protobuf field <code>int64 workflowKey = 1;</code>
     * @return int|string
     */
    public function getWorkflowKey()
    {
        return $this->workflowKey;
    }

    /**
     * the key of the workflow definition which was used to create the workflow instance
     *
     * Generated from protobuf field <code>int64 workflowKey = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setWorkflowKey($var)
    {
        GPBUtil::checkInt64($var);
        $this->workflowKey = $var;

        return $this;
    }

    /**
     * the BPMN process ID of the workflow definition which was used to create the workflow
     * instance
     *
     * Generated from protobuf field <code>string bpmnProcessId = 2;</code>
     * @return string
     */
    public function getBpmnProcessId()
    {
        return $this->bpmnProcessId;
    }

    /**
     * the BPMN process ID of the workflow definition which was used to create the workflow
     * instance
     *
     * Generated from protobuf field <code>string bpmnProcessId = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setBpmnProcessId($var)
    {
        GPBUtil::checkString($var, True);
        $this->bpmnProcessId = $var;

        return $this;
    }

    /**
     * the version of the workflow definition which was used to create the workflow instance
     *
     * Generated from protobuf field <code>int32 version = 3;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * the version of the workflow definition which was used to create the workflow instance
     *
     * Generated from protobuf field <code>int32 version = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkInt32($var);
        $this->version = $var;

        return $this;
    }

    /**
     * the unique identifier of the created workflow instance; to be used wherever a request
     * needs a workflow instance key (e.g. CancelWorkflowInstanceRequest)
     *
     * Generated from protobuf field <code>int64 workflowInstanceKey = 4;</code>
     * @return int|string
     */
    public function getWorkflowInstanceKey()
    {
        return $this->workflowInstanceKey;
    }

    /**
     * the unique identifier of the created workflow instance; to be used wherever a request
     * needs a workflow instance key (e.g. CancelWorkflowInstanceRequest)
     *
     * Generated from protobuf field <code>int64 workflowInstanceKey = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setWorkflowInstanceKey($var)
    {
        GPBUtil::checkInt64($var);
        $this->workflowInstanceKey = $var;

        return $this;
    }

    /**
     * JSON document
     * consists of visible variables in the root scope
     *
     * Generated from protobuf field <code>string variables = 5;</code>
     * @return string
     */
    public function getVariables()
    {
        return $this->variables;
    }

    /**
     * JSON document
     * consists of visible variables in the root scope
     *
     * Generated from protobuf field <code>string variables = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setVariables($var)
    {
        GPBUtil::checkString($var, True);
        $this->variables = $var;

        return $this;
    }

}

